@using Microsoft.AspNetCore.Identity
@model QandAn.Models.Question
@inject SignInManager<QandAn.Areas.Identity.Pages.Account.RegisterModel.AlinUser> SignInManager
@inject QandAn.Data.ApplicationDbContext dbContext

@{
     ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4> @Html.DisplayFor(model => model.QuestionTitle)</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-6">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.Name)
        </dd>
        <dt class = "col-sm-6">
            @Html.DisplayNameFor(model => model.QuestionContent)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.QuestionContent)
        </dd>
        <dt class = "col-sm-6">
            @Html.DisplayNameFor(model => model.QuestionCreateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.QuestionCreateTime)
        </dd>
    </dl>
</div>
<div>
    <br>
    <a asp-action="Index">Back to List</a>
</div>
@if(SignInManager.IsSignedIn(User))
{
    <div class="CreateAnswer">
        <div class="input_answer">
            <label class="control-label"></label>
            <input type="hidden" id="username" value="@dbContext.Users.FirstOrDefault(u => u.Email == User.Identity.Name).Name" >
            <input type="hidden" value="@Model.ID" id="questionId" />
            <input class="form-control" id = "answer" name="AnswerContent" placeholder="Только для зарегистрированных пользователей"/>
            <div class="form-group">
                <br>
                <button class="btn btn-warning" name="answerButton"  id="answerButton">Create answer</button>
            </div>
        </div>
    </div>
}
else {
    <div class="contener" style="text-align:center">
    <h3>Answers</h3>
    <br>
    </div>
}


<nav aria-label="breadcrumb">
    <div id= "list-example" class="list">
        <ul id="answerList">
        @foreach (var ans in Model.Answers)
        {    
           
            <ol class="breadcrumb">
                <div>
                    <label id="@ans.ID"> @ans.Rating</label>
                    @if(SignInManager.IsSignedIn(User))
                    {
                        <input type="button" onclick="change_rating(@ans.ID, 1)" id="negativeButton" value="+"/>
                        <input type="button" id="positiveButton" onclick="change_rating(@ans.ID, -1)" value="-"/>
                    }
                </div>
                &nbsp;
                @ans.User.Name<br>
                @ans.AnswerTime 

                <li class="breadcrumb-item active" aria-current="page" ><b>@ans.AnswerContent</b></li>
        
            @if(User.IsInRole("Admin"))
            {
                <a class="btn btn-warning btn-sm" style="display: block; margin-left:auto; " asp-action="DeleteAnswer" asp-route-id="@ans.ID" ><b>Delete</b></a>
            }
            </ol>
        }
        </ul>
    </div>
</nav>


<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>

    function change_rating(id, value){
        document.getElementById(id.toString()).textContent = parseInt(document.getElementById(id.toString()).textContent, 10)
                                                             + parseInt(value, 10);
         
        $.ajax({
            url: '@Url.Action("AddRating")',
            type:"POST",
            data: { answerId: parseInt(id, 10), value: parseInt(value, 10)},
            dataType: "text"
        });  
    }

    const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/answerHub")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        

    document.getElementById("answerButton").addEventListener("click", function(e){
        
        let answer = document.getElementById("answer").value;
        document.getElementById("answer").value = " ";
        let question = document.getElementById("questionId").value;
        let username = document.getElementById("username").value;
     
        hubConnection.invoke("Send", question, answer, username);
        
        $.ajax({
            url: '@Url.Action("CreateAnswer")',
            type:"POST",
            data: { AnswerContent: answer, questionId: parseInt(question, 10)},
            dataType: "text"
            
        }); 
    });

    hubConnection.on("Receive", function(answer, username, datetime){
       
        var ol = document.createElement("ol");
        ol.className = "breadcrumb"
        ol.innerHTML = `
                ${username}<br>
                ${datetime}
                &nbsp
                <li style="color:black;"><b>${answer}</b></li>`
        
        document.getElementById("answerList").appendChild(ol);
       
    });
    hubConnection.start().then(() => {
        hubConnection.invoke('JoinGroup', document.getElementById("questionId").value).catch(err => console.error(err.toString()));
        
    });
    
</script>



